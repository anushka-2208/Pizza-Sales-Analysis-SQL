-- Q-1 Retrieve the total number of order placed?

SELECT COUNT(order_id) as Total_Orderz_Placed FROM pizzahub.orders_details;

-- Q-2 Calculate the total revenue generated by the pizza sales?

SELECT round(sum(quantity * price),2)
as Total_Revenue_Generated 
FROM orders_details
JOIN pizzas
ON orders_details.pizza_id = pizzas.pizza_id;

-- Q-3 Identify the highest-priced pizza.

SELECT name , price
FROM pizza_types
JOIN pizzas
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY price DESC
LIMIT 1;

SELECT name , price
FROM pizza_types
JOIN pizzas
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
WHERE price = (SELECT max(price) FROM pizzas);

-- Q-4 Identify the most common pizza size ordered.

SELECT size , count(order_details_id)
AS order_count
FROM pizzas 
JOIN orders_details
ON pizzas.pizza_id = orders_details.pizza_id
GROUP BY size
ORDER BY order_count DESC
LIMIT 1;

-- Q-5 List the top 5 most ordered pizza types along with their quantities.

SELECT pizza_types.name,
sum(orders_details.quantity) AS Quantity
FROM pizza_types 
JOIN pizzas
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
JOIN orders_details
ON pizzas.pizza_id = orders_details.pizza_id
GROUP BY pizza_types.name 
ORDER BY sum(orders_details.quantity) DESC
LIMIT 5;

-- Q-6 Join the necessary tables to find the total quantity of each pizza category ordered. 

SELECT pizza_types.category, 
sum(orders_details.quantity) AS Quantity
FROM pizza_types
JOIN pizzas
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
JOIN orders_details
ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
ORDER BY sum(orders_details.quantity) DESC;

-- Q-7 Determine the distribution of orders by hour of the day.

SELECT hour(order_time) AS Hour,
count(order_id) AS Count
FROM orders
GROUP BY hour(order_time);

-- Q-8 Join relevant tables to find the category-wise distribution of pizzas.

SELECT pizza_types.category AS Category, 
count(pizzas.pizza_id) AS Distribution_of_Pizzas
FROM pizza_types
JOIN pizzas
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
GROUP BY Category
ORDER BY Distribution_of_Pizzas DESC;

-- Q-9 Group the orders by date and calculate the average number of pizzas ordered per day.

SELECT round(avg(Quantity),0) AS Average
FROM 
(SELECT date(orders.order_date) AS Date , 
sum(orders_details.quantity) AS Quantity
FROM orders
JOIN orders_details
ON orders.order_id = orders_details.order_id
GROUP BY Date) AS order_quantity;

-- Q-10 Determine the top 3 most ordered pizza types based on revenue.

SELECT pizza_types.name, sum(orders_details.quantity * pizzas.price) AS Revenue
FROM pizza_types
JOIN pizzas
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
JOIN orders_details
ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.name
ORDER BY Revenue DESC
LIMIT 3;

-- Q-11 Calculate the percentage contribution of each pizza type to total revenue.

SELECT category, 
round(sum(quantity * price) / (SELECT sum(quantity * price) 
                               FROM orders_details
                               JOIN pizzas
							   ON pizzas.pizza_id = orders_details.pizza_id) * 100 , 2)
      AS Percentage
FROM orders_details
JOIN pizzas
ON pizzas.pizza_id = orders_details.pizza_id
JOIN pizza_types
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
GROUP BY category;

-- Q-12 Analyze the cumulative(every day increment) revenue generated over time.

SELECT order_date ,
SUM(Revenue) over (ORDER BY order_date) AS Cumilative_Revenue
FROM 
(SELECT orders.order_date , 
sum(orders_details.quantity * pizzas.price) AS Revenue
FROM orders
JOIN orders_details
ON orders.order_id = orders_details.order_id
JOIN pizzas
ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY orders.order_date) AS REVENUE;

-- Q-13 Determine the top 3 most ordered pizza types based on revenue for each pizza category.

SELECT name, Revenue
FROM 
(
SELECT category, name, Revenue,
rank() over(PARTITION BY category ORDER BY revenue DESC) AS rn
FROM
(
SELECT pizza_types.category, pizza_types.name, 
sum(orders_details.quantity * pizzas.price) AS Revenue
FROM pizzas
JOIN pizza_types
ON pizzas.pizza_type_id = pizza_types.pizza_type_id
JOIN orders_details
ON orders_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category, pizza_types.name
) AS subque)
AS tb
WHERE rn<=3;











